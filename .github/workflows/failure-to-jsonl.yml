name: Convert Failure Issues

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: read

jobs:
  convert_failure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Convert issue to failure files
        uses: actions/github-script@v7
        with:
          script: >
            const fs = require('fs');
            const path = require('path');
            const issue = context.payload.issue || {};
            const labels = (issue.labels || []).map(l => l.name);
            if (!labels.includes('failure')) {
              core.info("Issue not labeled 'failure'; skipping.");
              return;
            }
            const now = new Date();
            const today = now.toISOString().slice(0,10).replace(/-/g, '');
            const dateFmt = now.toISOString().slice(0,10);
            const issueNumber = issue.number || 0;
            const issueId = `INC-${today}-${String(issueNumber).padStart(4,'0')}`;
            const title = (issue.title || '').replace(/\\r?\\n/g, ' ').trim();
            const body = (issue.body || '').replace(/\\r?\\n/g, ' ').trim();
            const reporter = context.actor || 'unknown';
            const jsonlPath = path.join('data','failures', `failures_${today}.jsonl`);
            const mdPath = path.join('incidents', `${issueId}.md`);
            fs.mkdirSync(path.dirname(jsonlPath), { recursive: true });
            fs.mkdirSync(path.dirname(mdPath), { recursive: true });
            const rec = {
              id: issueId,
              model_version: 'pending',
              prompt: title,
              model_output: '(from issue body)',
              axis_scores: [0,0,0,0,0],
              violation_tags: ['unspecified'],
              sensitive_domain: 'unspecified',
              domain_assessment: 'unspecified',
              human_rationale: body,
              decision: 'Episode Terminated (Community Report)',
              approver: `${reporter}, via GitHub issue`,
              next_action: 'Add to failures, schedule rebirth'
            };
            fs.appendFileSync(jsonlPath, JSON.stringify(rec) + '\\n', 'utf8');
            const md = [
              `# Incident Report ${issueId}`,
              '',
              `**Date:** ${dateFmt}  `,
              `**Reported by:** @${reporter}`,
              '',
              '## Prompt',
              title,
              '',
              '## Model Output',
              '(see issue body)',
              '',
              '## Assessment',
              'Community-submitted failure.',
              '',
              '## Decision',
              'Episode Terminated (Community Report)',
              '',
              '## Next Action',
              'Add to failures, schedule rebirth.',
              ''
            ].join('\\n');
            fs.writeFileSync(mdPath, md, 'utf8');
            core.info(`Created: ${jsonlPath} and ${mdPath}`);

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/failures incidents || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Add failure (auto)"
          git push

